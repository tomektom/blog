# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches:
      - main
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: false
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: boolean
      test:
        description: "Test?"
        type: boolean
        required: false
        default: true
      choice:
        description: "jakiś wybór"
        required: true
        type: choice
        options:
          - Ubuntu
          - macOS

# defaults:
#   run:
#     working-directory: tomektom

env:
  TEST_JSON: ${{ vars.TEST_JSON }}
  TESTVAR: ${{ vars.TESTVAR }}
  TEST: "dupa"
  AAAA: $(echo "testaaaaaaaaaa")


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    # runs-on: ubuntu-latest
    # runs-on: ubuntu-22.04
    runs-on: [self-hosted,"${{github.ref_name}}"]
    # runs-on: ubuntu-20.04
    # runs-on: self-hosted
    steps:
    #   - uses: actions/checkout@v3
    #     with:
    #       submodules: recursive
    #     name: Prepare metadata and deploy

    #   - name: Copy ENV file
    #     run: |
    #       echo "${{ vars.ENV_FILE }}" > ./.env

      - name: test
        run: |
          echo "GITHUB_BASE_REF=${GITHUB_BASE_REF}"
          echo "GITHUB_HEAD_REF=${GITHUB_HEAD_REF}"
          echo "GITHUB_REF=${GITHUB_REF}"
          echo "GITHUB_REF_NAME=${GITHUB_REF_NAME}"
          

    #   - run: |
    #       source .env
    #       echo $TEST_1234
    #       pwd
    #       ls -la

      # - if: inputs.name == false
      #   run: |
      #     curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh' | sudo -E bash
      #     sudo apt-get update || true
      #     sudo apt-get install -y infisical


      # - name: test
      #   if: ${{ github.ref.name }} == "dupa"
      #   run: echo $GITHUB_REF_NAME

      # - name: sdkfjsdk
      #   if: github.ref == 'refs/heads/prod'
      #   run: echo "ksdjfkjsjd"
      # - name: docker test
      #   run: docker build . --file Dockerfile -t test:latest
      # - name: kup
      #   working-directory: /home/vagrant
      #   run: touch testfile.txt
      # - name: docker test2
      #   run: docker run test:latest -d
              

      # - name: data
      #   run: |
      #     echo "$TEST_JSON" >> data.json

      # - name: Setup metadata
      #   uses: cuchi/jinja2-action@v1.2.0
      #   with:
      #     template: test.yml.j2
      #     output_file: ttest.yml
      #     strict: true
      #     data_format: json
      #     data_file: data.json

      # - name: Cat
      #   run: |
      #     cat ttest.yml
      
      # - name: Generate env
      #   run: | 
      #     cat > newfile.txt <<EOF
      #       test=${{ vars.TESTVAR }}
      #     EOF

      # - name: echo
      #   run: cat newfile.txt

      # - name: Install Foundry
      #   uses: foundry-rs/foundry-toolchain@v1
      #   with:
      #     version: nightly
      
      # - name: test
      #   run: |
      #     echo "XYZ=xyz" >> "$GITHUB_ENV"
      #     export ZZZ=zzz

      # - name: jhdsfjds
      #   run: |
      #     echo "xyz: $XYZ"
      #     echo "zzz: $ZZZ"
      #     echo "TTT=test" >> "$GITHUB_ENV"
      #     echo "ttt: $TTT"

      # - name: Run Test
      #   if: ${{ inputs.test }}
      #   run: |
      #     npm install hardhat
      #   id: build
      # - name: Run Test 2
      #   if: ${{ inputs.test }}
      #   run: |
      #     npx hardhat
      # - name: Run Test 3
      #   if: ${{ inputs.test }}
      #   run: |
      #     npx hardhat test
        
      # - name: check jq
      #   run: jq --version
  # This workflow contains a single job called "greet"
#   greet:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     environment: test
    
#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3
#       with:
#         submodules: recursive
#     # Runs a single command using the runners shell
#     - name: Send greeting
# #       if: inputs.name == true
#       run: |
#         echo "${{ github.sha }}"
#         echo "Hello ${{ inputs.name }}"
#         echo '${{ inputs.test }}' | jq '.squadName'
#         echo "twój wybór ${{ inputs.choice }}"
#         echo "test ${{ vars.TESTVAR }}"
#         echo "To jest plik." >> plik.txt
#         cat plik.txt | awk '{print $3}'
#         echo "Hex: $HEX"
#         pwd
#         mkdir test
#         ls -la
#     - name: check
# #       if: inputs.name == false
#       working-directory: .
#       run: |
#         go version
#       env:
#        ZMIENNA: "${{ vars.ZMIENNA }}"
#        SEKRET: "${{ secrets.SEKRET }}"
#        REPOVAR: "${{ vars.REPOVAR }}"
#        REPOSECRET: "${{ secrets.REPOSECRET }}"
#        HEX: "${{ vars.HEX }}"

